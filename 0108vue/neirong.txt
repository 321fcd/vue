<div id="a1"><h2>全局配置</h2></div><div id="a2"><h3>silent</h3> <h4>·类型：boolean</h4> <h4>·默认值：false</h4> <h4>·用法：</h4> <pre><code class="lang-">Vue.config.silent = true </code></pre> <p>取消 Vue 所有的日志与警告。</p></div><div id="a3"><h3>optionMergeStrategies</h3> <h4>·类型：{ [key: string]: Function }</h4> <h4>·默认值：{}</h4> <h4>·用法：</h4> <pre><code class="lang-">Vue.config.optionMergeStrategies._my_option = function (parent, child, vm) { return child + 1 } const Profile = Vue.extend({ _my_option: 1 }) // Profile.options._my_option = 2 </code></pre> <p>自定义合并策略的选项。</p> <p>合并策略选项分别接受第一个参数作为父实例，第二个参数为子实例，Vue 实例上下文被作为第三个参数传入。</p> <h4>·参考 自定义选项的混合策略</h4></div><div id="a4"><h2>全局 API</h2></div><div id="a5"><h3>Vue.extend</h3> <h4>·参数：</h4> <h5>····{Object} options</h5> <h4>·用法：</h4> <p>使用基础 Vue 构造器，创建一个“子类”。参数是一个包含组件选项的对象。</p> <p>data 选项是特例，需要注意 - 在 Vue.extend() 中它必须是函数</p> <pre><code class="lang-">&lt;div id=&quot;mount-point&quot;&gt;&lt;/div&gt; </code></pre> <pre><code class="lang-">// 创建构造器 var Profile = Vue.extend({ template: '&lt;p&gt;{{firstName}} {{lastName}} aka {{alias}}&lt;/p&gt;', data: function () { return { firstName: 'Walter', lastName: 'White', alias: 'Heisenberg' } } }) // 创建 Profile 实例，并挂载到一个元素上。 new Profile().$mount('#mount-point') </code></pre> <p>结果如下：</p> <pre><code class="lang-">&lt;p&gt;Walter White aka Heisenberg&lt;/p&gt; </code></pre></div><div id="a6"><h3>Vue.nextTick</h3> <h4>·参数：</h4> <h4>····{Function} [callback]</h4> <h4>····{Object} [context]</h4> <h4>·用法：</h4> <p>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p> <pre><code class="lang-">// 修改数据 vm.msg = 'Hello' // DOM 还没有更新 Vue.nextTick(function () { // DOM 更新了 }) // 作为一个 Promise 使用 (2.1.0 起新增，详见接下来的提示) Vue.nextTick() .then(function () { // DOM 更新了 }) </code></pre></div><div id="a7"><h2>选项 / 数据</h2></div><div id="a8"><h3>data</h3> <h4>·类型：boolean</h4> <h4>·默认值：false</h4> <h4>·用法：</h4> <pre><code class="lang-">Vue.config.silent = true </code></pre> <p>取消 Vue 所有的日志与警告。</div><div id="a9"></p> <h3>props</h3> <h4>·类型：{ [key: string]: Function }</h4> <h4>·默认值：{}</h4> <h4>·用法：</h4> <pre><code class="lang-">Vue.config.optionMergeStrategies._my_option = function (parent, child, vm) { return child + 1 } const Profile = Vue.extend({ _my_option: 1 }) // Profile.options._my_option = 2 </code></pre> <p>自定义合并策略的选项。</p> <p>合并策略选项分别接受第一个参数作为父实例，第二个参数为子实例，Vue 实例上下文被作为第三个参数传入。</p> <h4>·参考 自定义选项的混合策略</h4></div>